(defun elpamr--create-one-item-for-archive-contents (pkg)
  (let (item package-content)
    ;; (dolist (package-content package-archive-contents)
    ;;   (setq name (car package-content))
    ;;   (message "package-content=%s" package-content)
    ;;   )
    (setq package-content (nth 0 package-archive-contents))
    (message "package-content=%s" package-content)
    ;; here is deal, for the array, we use [0..3] (to the description), for other elements, for use stuff from package-archive-contents
    ))

(defun elpamr-create-mirror ()
  "export and packages pkg into a new directory.create all the necessary web files for a mirror site"
  (interactive)
  (let (name item pkg)
    (dolist (pkg package-alist)
      (setq name (car pkg))
      ;; (setq item (elpamr--create-one-item-for-archive-contents pkg))
      ;; (message "item=%s" item)
      ;; (message "pkg=%s" pkg)
      )
    (setq pkg (nth 0 package-alist))
    (message "pkg=%s" pkg)
    (setq item (elpamr--create-one-item-for-archive-contents pkg))
    ))

(provide 'elpa-mirror)